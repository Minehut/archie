# Default values for archie.
replicaCount: 1

image:
  repository: nothing.public.yet
  pullPolicy: IfNotPresent
#  tag: latest
#  args: []

archie:
  logLevel: info # or "debug" or "trace"
  msgTimeout: 30m
  shutdownWait: 30 # seconds
  skipLifecycleExpired: false
  # pcre regex matching
  #excludePaths:
  #  copyObject:
  #  - '.*'
  #  removeObject:
  #  - '.*'
  # disable the deployment
  deployment:
    create: true
  healthCheck:
    enabled: true
    port: 8080
  metrics:
    port: 9999
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 10%
  service:
    type: ClusterIP
  serviceMonitor:
    enabled: false
    additionalLabels: {}
  prometheusRules:
    enabled: false
    additionalLabels: {}
    dashboard: https://www.grafana.com/d/0000000/archie
    rules:
      archieMessagesProcessedFailedThreshold: 30
      natsMessagesAckPendingThreshold: 500
      natsMessagesDeliveredLowThreshold: 30
      natsMessagesPendingThreshold: 20000
      natsMessagesRedeliveredPercentageThreshold: 2

jetstream:
  url: nats://localhost:4222
  metricsURL: localhost:8222
  provisioningDisabled: false
#  subject: minio-archie-events
#  batchSize: 1
#  username:
#  password:
#  stream:
#    name: archie-stream
#    retention: interest # or "limits" or "work_queue"
#    maxAge: 72h
#    replicas: 1
#    maxSize: -1 # MB
#    republishSubject: minio-archie-events-archive
#  consumer:
#    name: durable
#    maxAckPending: 1000
#  rootCA:
#    fileName: ca.crt
#    secretName: nats-ca
#  tls:
#    allowNonTLS: false
#    secret:
#      name: nats-client-tls
#    ca: ca.crt
#    cert: tls.crt
#    key: tls.key

keda:
  create: false
  pollingInterval: 30
  # only used for scaling to zero
  cooldownPeriod: 300
  fallback:
    enabled: false
    failureThreshold: 3
    replicas: 1
  horizontalPodAutoscalerConfig:
    enabled: false
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        percent: 100
        periodSeconds: 15
  # can't really set min replicas to 0 as keda does not include
  # messages waiting for ack in the scaling metric
  minReplicaCount: 1
  maxReplicaCount: 20
  trigger:
    # logThreshold * messages in queue = pods running
    lagThreshold: 10
  # pause scaling at N replicas
  pausedReplicas:
    enabled: false
    replicas: 0

source:
  name: src # just a label
  bucket: src-test
  endpoint: ""
  useSSL: true
#  accessKey:
#  secretKey:
#  googleCredentials:

destination:
  name: dest # just a label
  bucket: dest-test
  endpoint: ""
  useSSL: true
  threads: 4
  partSize: 16 # MiB
#  accessKey:
#  secretKey:
#  googleCredentials:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

nodeSelector: {}

tolerations: []

affinity: {}
